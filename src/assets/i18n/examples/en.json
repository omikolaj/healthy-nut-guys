{
  "hng.examples.auth.description1": "This component is only accessible for authenticated users",
  "hng.examples.auth.description2": "Logging out will cause user to be redirected to home screen if visiting route accessible only to authenticated users",
  "hng.examples.auth.title": "Authenticated component",
  "hng.examples.crud.add": "Add a new book",
  "hng.examples.crud.cancel": "Cancel",
  "hng.examples.crud.empty": "Looks like you don't have any books, let's add some!",
  "hng.examples.crud.error": "is required",
  "hng.examples.crud.new": "New",
  "hng.examples.crud.placeholder0": "Id",
  "hng.examples.crud.placeholder1": "Title",
  "hng.examples.crud.placeholder2": "Author",
  "hng.examples.crud.placeholder3": "Description",
  "hng.examples.crud.save": "Save",
  "hng.examples.crud.subtitle1": "Your books",
  "hng.examples.crud.subtitle2": "Book editor",
  "hng.examples.crud.text": "Books can be managed in this editor and are added, updated, deleted and selected through ",
  "hng.examples.crud.title": "CRUD books using @ngrx/entity & @ngrx/router-store",
  "hng.examples.crud.tooltip.delete": "Delete book",
  "hng.examples.crud.tooltip.deselect": "Deselect book",
  "hng.examples.crud.tooltip.edit": "Edit book",
  "hng.examples.form.autosave": "Auto Save",
  "hng.examples.form.error1": "is required",
  "hng.examples.form.error2": "should be valid",
  "hng.examples.form.error3": "should be longer than",
  "hng.examples.form.error4": "should be smaller than",
  "hng.examples.form.placeholder1": "Username",
  "hng.examples.form.placeholder2": "Password",
  "hng.examples.form.placeholder3": "E-mail",
  "hng.examples.form.placeholder4": "Description",
  "hng.examples.form.placeholder5": "Birthday",
  "hng.examples.form.reset": "Reset",
  "hng.examples.form.save": "Save",
  "hng.examples.form.send": "Send",
  "hng.examples.form.subtitle1": "The form",
  "hng.examples.form.subtitle2": "Marketing information",
  "hng.examples.form.text1": "Request a gift.",
  "hng.examples.form.text2": "Rate this form:",
  "hng.examples.form.text3": "You have to request a gift to see more information.",
  "hng.examples.form.text4": "Gift sent!",
  "hng.examples.form.text5": "No gift sent.",
  "hng.examples.form.text6": "Clap",
  "hng.examples.form.title": "Reactive form using a form builder",
  "hng.examples.menu.auth": "Auth",
  "hng.examples.menu.crud": "CRUD",
  "hng.examples.menu.form": "Form",
  "hng.examples.menu.notifications": "Notifications",
  "hng.examples.menu.stocks": "Stocks",
  "hng.examples.menu.theming": "Theming",
  "hng.examples.menu.todos": "Todos",
  "hng.examples.menu.elements": "Elements",
  "hng.examples.menu.simple-state-management": "Simple State Management",
  "hng.examples.notifications.default.description": "Default notifications for events of low importance",
  "hng.examples.notifications.default.title": "Default",
  "hng.examples.notifications.error.description": "Error notifications, when things go really wrong...",
  "hng.examples.notifications.error.title": "Error",
  "hng.examples.notifications.info.description": "Info notifications for events of medium importance",
  "hng.examples.notifications.info.title": "Info",
  "hng.examples.notifications.success.description": "Success notifications for reporting of a successful end of an operation or action",
  "hng.examples.notifications.success.title": "Success",
  "hng.examples.notifications.title": "Notifications",
  "hng.examples.notifications.warning.description": "Warning notifications for events that require user attention",
  "hng.examples.notifications.warning.title": "Warning",
  "hng.examples.stocks.description": "Please provide some valid stock market symbol like:",
  "hng.examples.stocks.error1": "Stock",
  "hng.examples.stocks.error2": "not found",
  "hng.examples.stocks.symbol": "Stock symbol",
  "hng.examples.stocks.text1": "Stock market example shows how to implement",
  "hng.examples.stocks.text2": "requests using",
  "hng.examples.stocks.text3": "module.",
  "hng.examples.stocks.text4": "Updating symbol query with different symbol will emit action which updates state with loading flag (reducer) and triggers effect for retrieving of selected stock.",
  "hng.examples.stocks.text5": "Actions are debounced and every subsequent request will cancel previous one using",
  "hng.examples.stocks.text6": "Success or error actions are emitted on request completion. Loading spinner is removed and stock info or error message is displayed.",
  "hng.examples.stocks.title": "Stock market",
  "hng.examples.elements.title": "Angular Elements (and other web components)",
  "hng.examples.elements.counter": "Counter",
  "hng.examples.elements.text1": "The button on the left side is a web component from the mwc (material web components) library. The web component was lazy loaded from the",
  "hng.examples.elements.text2": "url only when it was first time displayed in the template of the parent Angular component.",
  "hng.examples.elements.text3": "This seamless lazy-loading and usage was achieved just by using simple",
  "hng.examples.elements.text4": "directive from the",
  "hng.examples.elements.text5": "library",
  "hng.examples.elements.text6": "Learn more about the",
  "hng.examples.elements.text7": "use cases",
  "hng.examples.elements.text8": "where it can bring the most value to your projects",
  "hng.examples.elements.text9": "and explore the",
  "hng.examples.elements.text10": "examples",
  "hng.examples.elements.text11": "by checking out the",
  "hng.examples.elements.text12": "official documentation",
  "hng.examples.simple-state-management.title": "Simple state management",
  "hng.examples.simple-state-management.text1": "NgRx is a great state management library but sometimes it can be an overkill to use it in simpler applications with limited routing or state sharing needs.",
  "hng.examples.simple-state-management.text2": "In these cases we usually reach for solution involving RxJs BehaviorSubject which enables to share our state as an Observable stream while also enabling service to imperatively retrieve and mutate Subjects state imperatively...",
  "hng.examples.simple-state-management.text3": "This pattern was wrapped and made more convenient by",
  "hng.examples.simple-state-management.text4": "which is a simple state management with minimalistic API, one way data flow, multiple models support and immutable data exposed as RxJS Observable",
  "hng.examples.simple-state-management.text5": "Learn more in the",
  "hng.examples.simple-state-management.text6": "Official documentation",
  "hng.examples.simple-state-management.text7": "You can also add it to your project using",
  "hng.examples.simple-state-management.form.add.title": "Add new user",
  "hng.examples.simple-state-management.form.add.submit": "Add user",
  "hng.examples.simple-state-management.form.edit.title": "Edit existing user",
  "hng.examples.simple-state-management.form.edit.submit": "Edit user",
  "hng.examples.simple-state-management.form.reset": "Reset",
  "hng.examples.simple-state-management.username": "Username",
  "hng.examples.simple-state-management.name": "Name",
  "hng.examples.simple-state-management.surname": "Surname",
  "hng.examples.simple-state-management.validator.required": "Please provide value",
  "hng.examples.simple-state-management.validator.minlength": "Please provide at least {{minlength}} characters",
  "hng.examples.theming.child.description": "child works!",
  "hng.examples.theming.child.subtitle": "should be without style",
  "hng.examples.theming.child.title": "childs h1",
  "hng.examples.theming.parent.description": "parent works!",
  "hng.examples.theming.parent.text1": "Theme styles are not imported in component's",
  "hng.examples.theming.parent.text10": "in css rules to enhance their specificity. For example checkout theme file of this component:",
  "hng.examples.theming.parent.text2": "property of",
  "hng.examples.theming.parent.text3": "decorator but in the main",
  "hng.examples.theming.parent.text4": "file. Because of this, theme styles are",
  "hng.examples.theming.parent.text5": "NOT",
  "hng.examples.theming.parent.text6": "scoped to the component automatically.",
  "hng.examples.theming.parent.text7": "We have to use",
  "hng.examples.theming.parent.text8": "specific",
  "hng.examples.theming.parent.text9": "selectors to prevent styles from leaking into child components. This can be achieved by using",
  "hng.examples.theming.parent.title": "Theme scoping with nested components",
  "hng.examples.title": "Examples",
  "hng.examples.todos.added.notification": "{{name}} added",
  "hng.examples.todos.example": "Todo example",
  "hng.examples.todos.filter.active": "Active",
  "hng.examples.todos.filter.all": "All",
  "hng.examples.todos.filter.description": "Displaying",
  "hng.examples.todos.filter.done": "Done",
  "hng.examples.todos.filter.item": "todo",
  "hng.examples.todos.filter.items": "todos",
  "hng.examples.todos.filter.none": "none",
  "hng.examples.todos.filter.notification": "Filtered to",
  "hng.examples.todos.filter.one": "one",
  "hng.examples.todos.input": "I am going to...",
  "hng.examples.todos.list": "Todo list",
  "hng.examples.todos.remove.notification": "Removed done todos",
  "hng.examples.todos.text1": "This is a classic",
  "hng.examples.todos.text2": "todo",
  "hng.examples.todos.text3": "example with support for adding, toggling, removing and filtering of the todo items.",
  "hng.examples.todos.text4": "State handling is implemented using",
  "hng.examples.todos.text5": "module and support for lazy loaded reducers (this is a lazy loaded feature module).",
  "hng.examples.todos.text6": "Todos are persisted into local storage so you should see your todos also on later visits when using the same browser.",
  "hng.examples.todos.toggle.notification": "Toggled {{name}} to",
  "hng.examples.todos.tooltip.add": "Add new todo",
  "hng.examples.todos.tooltip.remove": "Remove done todos",
  "hng.examples.todos.undo": "Undo"
}
